name: 'GlobalAppTesting'
description: |
  Launch an exploratory test with Global App Testing and find issues impacting your users.
branding:
  icon: 'user-check'
  color: 'green'
inputs:
  api_key:
    description: 'GlobalAppTesting API key to request an exploratory test'
    required: true
  access_token:
    description: 'Access Token we will need to export issues to your repository. "repo" permissions are enough.'
    required: true
  repository:
    description: |
      Point the repository where testers will create issues.
      Please be aware that your access token will be used to access this repository!
    required: true
    default: ${{ github.repository }}
  organization_name:
    description: |
      Name of your organization which will be displayed to the testers.
      If none submitted, the owner of the repository will be used.
    required: true
    default: ${{ github.repository_owner }}
  application_url:
    description: |
      URL under which your application will be available for testing. If that's more convenient for you, you can also put the URL directly in the description, although this way might sooner or later get deprecated. This field is now the advised way for pointing our testers to your application.
    required: false
  wait_for_finished_testing:
    description: |
      Only useful if using this action with `on: pull_request` trigger!
      Set to true to mark your PR as pending until results from GAT testers will come back.
      GAT will mark your PR(using your access token) green when tests will complete successfully.
      If there were any test case failures GAT will open them as issues and mark your PR red until next testing is requested.
    required: true
    default: false
  pr_status_context:
    description: |
      Only useful if using this action with `on: pull_request` trigger!
      Github Commit Status context which will be displayed as one of the checks on your Pull Request. Currently we support 3 checks - pending(our testers has received your request and now they're testing), success(test has finished, testers found 0 issues) and failure(testers have found issues in your app).
      If none given, "GlobalAppTesting" will be use as default context.
    required: false
  issue_prefix:
    description: |
      Prefix which will be used in the titles of reported issues.
      For example, "GlobalAppTesting" will result in issue titled like "[GlobalAppTesting] <issue title>".
      Useful in monorepos(set issue_prefix based on PR title or branch, see examples section in README) to filter issues per package.
      Can also be used for simple filtering the issues reported by GAT.
    required: false
runs:
  using: composite
  steps:
    - id: request-testing
      shell: bash
      run: |
        desc=$(echo `jq -cM '.description' < .gat.json`)
        test_cases=$(echo `jq -cM '.test_cases' < .gat.json`)
        curl \
          --silent \
          --fail \
          -X POST \
          -H 'Content-type: application/vnd.api+json' \
          -H 'X-Api-Key: ${{ inputs.api_key }}' \
          -d "{
            \"data\":{
              \"type\":\"testRequest\",
              \"attributes\":{
                \"description\":$desc,
                \"name\":\"${{ inputs.organization_name }}\",
                \"application_url\":\"${{ inputs.application_url }}\",
                \"test_cases\":$test_cases,
                \"vendor\":\"github\",
                \"export_settings\":{
                  \"github\":{
                    \"repository\":\"${{ inputs.repository }}\",
                    \"access_token\":\"${{ inputs.access_token }}\",
                    \"pr_number\":${{ toJSON(github.event.pull_request.number) }},
                    \"pr_status_context\":\"${{ inputs.pr_status_context }}\",
                    \"wait_for_finished_testing\":${{ inputs.wait_for_finished_testing }},
                    \"issue_prefix\":\"${{ inputs.issue_prefix }}\"
                  }
                }
              }
            }
          }' \
          'https://app.globalapptesting.com/api/v1/flexible_testing/test_requests'
